# Generated by Django 3.2.9 on 2021-11-22 13:45

import datetime
from django.db import migrations, models
import django.db.models.deletion
import uuid


class Migration(migrations.Migration):

    dependencies = [
        ('todos', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='List',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, primary_key=True, serialize=False)),
                ('title', models.TextField()),
                ('description', models.TextField(blank=True)),
                ('start_date', models.DateField(default=datetime.date.today)),
                ('due_date', models.DateField(blank=True, null=True)),
                ('completed_date', models.DateField(blank=True, null=True)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Tag',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.TextField()),
            ],
        ),
        migrations.CreateModel(
            name='Todo',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, primary_key=True, serialize=False)),
                ('title', models.TextField()),
                ('description', models.TextField(blank=True)),
                ('start_date', models.DateField(default=datetime.date.today)),
                ('due_date', models.DateField(blank=True, null=True)),
                ('completed_date', models.DateField(blank=True, null=True)),
                ('frequency', models.CharField(choices=[('DAILY', 'DAILY'), ('WEEKLY', 'WEEKLY'), ('MONTHLY', 'MONTHLY'), ('QUARTERLY', 'QUARTERLY'), ('YEARLY', 'YEARLY')], default=None, max_length=20, null=True)),
                ('end_date', models.DateField(blank=True, null=True)),
                ('effort', models.DecimalField(decimal_places=2, default=0.5, max_digits=6)),
                ('reward', models.DecimalField(decimal_places=2, default=0.5, max_digits=6)),
                ('list', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='todos.list')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.RemoveField(
            model_name='habits',
            name='basetodos_ptr',
        ),
        migrations.RemoveField(
            model_name='todos',
            name='basetodos_ptr',
        ),
        migrations.RemoveField(
            model_name='todos',
            name='habit',
        ),
        migrations.AlterModelOptions(
            name='wishlist',
            options={},
        ),
        migrations.RemoveField(
            model_name='wishlist',
            name='imgurl',
        ),
        migrations.RemoveField(
            model_name='wishlist',
            name='producturl',
        ),
        migrations.AddField(
            model_name='wishlist',
            name='img_url',
            field=models.URLField(blank=True, max_length=400),
        ),
        migrations.AddField(
            model_name='wishlist',
            name='product_url',
            field=models.URLField(blank=True, max_length=400),
        ),
        migrations.AlterField(
            model_name='wishlist',
            name='id',
            field=models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID'),
        ),
        migrations.AlterField(
            model_name='wishlist',
            name='title',
            field=models.TextField(),
        ),
        migrations.DeleteModel(
            name='baseTodos',
        ),
        migrations.DeleteModel(
            name='Habits',
        ),
        migrations.DeleteModel(
            name='Projects',
        ),
        migrations.DeleteModel(
            name='Todos',
        ),
        migrations.AddField(
            model_name='list',
            name='tags',
            field=models.ManyToManyField(to='todos.Tag'),
        ),
    ]
